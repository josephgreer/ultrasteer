#include <stdio.h>
#include "Common.h"
#include "JacobianControl.h"
#ifdef __AVR_ATmega2560__
#include "Arduino.h"
#endif

//#define RUN_JACOBIAN_TEST
#define RUN_CVX_TEST

struct DeltaTestData
{
  //Vec2f64 delta_x_desired;
  f64 q_res[6];
};

Vecf64<2> J[N_TURN_ACT];

#ifdef RUN_JACOBIAN_TEST
void runTest()
{
  DeltaTestData testData[] = {
    { -356.352529, -24.280793, 0.074072, 0.929907, 1.000000 },
    { 39.941583, -30.465344, 0.129953, 0.841962, 1.000000 },
    { 5.464396, 19.848427, 0.129953, 0.856949, 0.957690 },
    { -11.133521, 4.342671, 0.108388, 0.869485, 0.957690 },
    { -250.165437, 69.565317, 0.000000, 0.969438, 1.000000 },
    { -48.159266, 266.180382, 0.000000, 1.000000, 0.984022 },
    { -8.071445, -5.183887, 0.000000, 1.000000, 0.984022 },
    { -96.691088, -37.479680, 0.000000, 1.000000, 0.984022 },
    { -97.653469, 57.668323, 0.000000, 1.000000, 0.984022 },
    { -61.614649, -165.056207, 0.000000, 0.996570, 1.000000 },
    { 120.332318, 181.612064, 0.038696, 0.996570, 0.475731 },
    { 23.200744, -120.329147, 0.038696, 0.764888, 0.591409 },
    { 27.201998, 152.785872, 0.038696, 0.917411, 0.302877 },
    { 359.624095, -151.925116, 0.718472, 0.478841, 0.302877 },
    { -169.218421, -319.033908, 0.532063, 0.254992, 1.000000 },
    { 85.574700, -124.650271, 0.556170, 0.000000, 1.000000 },
    { 218.705058, 143.106348, 0.896377, 0.000000, 0.586888 },
    { -135.179675, -51.411166, 0.632633, 0.000000, 0.735299 },
    { 25.382487, 160.614695, 0.632633, 0.168371, 0.440015 },
    { -105.649956, 20.883827, 0.398651, 0.228658, 0.440015 },
    { -47.523285, 176.798845, 0.398651, 0.602653, 0.303636 },
    { 150.081967, -180.183789, 0.513783, 0.082507, 0.303636 },
    { -23.223499, 108.738715, 0.513783, 0.297517, 0.204744 },
    { -78.847048, 23.110356, 0.350023, 0.364231, 0.204744 },
    { 61.841870, 196.093626, 0.582920, 0.725560, 0.000000 },
    { 165.101401, 100.788502, 1.000000, 0.942944, 0.000000 },
    { -183.403986, 215.625218, 0.986500, 1.000000, 0.000000 },
    { -5.651111, -276.379401, 0.986500, 0.615208, 0.413047 },
    { -55.727336, -138.660710, 0.986500, 0.554387, 0.752505 },
    { -66.880874, -118.349005, 0.895971, 0.460238, 1.000000 },
    { -116.927462, -57.550130, 0.520585, 0.294105, 1.000000 },
    { -23.164143, 8.315765, 0.474678, 0.318111, 1.000000 },
    { 17.879601, 388.229545, 0.474678, 0.833773, 0.394940 },
    { 33.658547, 274.535400, 0.419904, 1.000000, 0.000000 },
    { -169.505615, -234.780551, 0.335017, 1.000000, 0.677753 },
    { -235.747892, 37.204263, 0.000000, 1.000000, 0.621802 },
    { 26.493019, 11.855891, 0.049120, 1.000000, 0.587577 },
    { 19.142351, 57.649392, 0.013766, 1.000000, 0.421157 },
    { 41.820435, 30.426235, 0.074401, 1.000000, 0.333324 },
    { -70.955780, -24.681625, 0.000000, 1.000000, 0.370718 },
    { 260.390234, -80.821191, 0.534320, 0.766689, 0.370718 },
    { -273.528967, -72.101378, 0.000000, 0.812122, 0.624289 },
    { -32.302640, 369.280135, 0.000000, 1.000000, 0.485851 },
    { 154.426868, -246.086864, 0.030871, 0.289608, 0.485851 },
    { -334.248451, 41.713511, 0.000000, 0.888395, 1.000000 },
    { -8.707361, -263.986799, 0.000000, 0.888395, 1.000000 },
    { 217.333779, -130.426823, 0.355080, 0.511885, 1.000000 },
    { -147.218828, 165.010776, 0.225205, 0.988230, 1.000000 },
    { 25.396850, 72.509880, 0.195808, 1.000000, 0.802452 },
    { -47.811286, -310.313038, 0.000000, 0.576557, 1.000000 },
    { 335.171199, -59.368711, 0.752237, 0.405174, 1.000000 },
    { -34.577396, -9.715333, 0.651770, 0.377128, 1.000000 },
    { -370.267830, 25.928223, 0.000000, 0.432050, 1.000000 },
    { 45.437311, -188.642721, 0.000000, 0.432050, 1.000000 },
    { -83.774713, 24.179426, 0.000000, 0.432050, 1.000000 },
    { 13.003580, 26.423059, 0.000000, 0.437679, 0.929353 },
    { 199.737823, -160.240376, 0.292952, 0.000000, 0.954247 },
    { 102.894435, 129.818766, 0.362811, 0.000000, 0.579493 },
    { 79.794003, 25.433620, 0.525586, 0.000000, 0.506072 },
    { -31.492937, -258.538068, 0.720444, 0.000000, 1.000000 },
    { -108.954832, 14.475386, 0.468951, 0.041787, 1.000000 },
    { -220.529589, -312.624386, 0.422529, 0.000000, 1.000000 },
    { -25.782075, 11.056923, 0.374033, 0.031919, 1.000000 },
    { 30.991405, 11.762217, 0.434535, 0.031919, 0.966045 },
    { 209.409414, -54.178063, 0.656054, 0.000000, 1.000000 },
    { 35.523224, -57.999358, 0.656054, 0.000000, 1.000000 },
    { -17.978752, 276.206489, 0.656054, 0.443617, 0.646277 },
    { 107.977300, -83.137751, 0.805999, 0.203619, 0.646277 },
    { 317.501132, 136.621667, 1.000000, 0.000000, 0.179786 },
    { -75.292681, 286.711551, 1.000000, 0.479797, 0.000000 },
    { 151.840402, 232.852659, 1.000000, 0.479797, 0.000000 },
    { 158.035323, -244.182023, 1.000000, 0.479797, 0.000000 },
    { -184.024957, 225.005099, 0.891644, 1.000000, 0.000000 },
    { 80.337720, 96.452271, 0.891644, 1.000000, 0.000000 },
    { -307.038493, 169.845569, 0.891644, 1.000000, 0.000000 },
    { 200.179969, 289.598211, 0.891644, 1.000000, 0.000000 },
    { 117.691535, -370.401548, 0.891644, 0.171143, 0.240400 },
    { -55.248096, 60.561517, 0.840936, 0.345969, 0.240400 },
    { 19.608350, 330.564069, 1.000000, 0.830060, 0.000000 },
    { 272.879285, -60.585161, 1.000000, 0.830060, 0.000000 },
    { -114.126269, 12.601805, 0.732873, 0.866438, 0.000000 },
    { 175.108530, -301.742502, 0.739734, 0.000000, 0.004617 },
    { 72.306447, 47.257228, 0.984093, 0.131803, 0.000000 },
    { 166.749585, -295.522751, 1.000000, 0.000000, 0.017602 },
    { -44.144856, 102.626055, 1.000000, 0.120475, 0.000000 },
    { -195.710234, 90.873036, 0.641888, 0.382803, 0.000000 },
    { 276.205620, 189.150638, 1.000000, 0.585744, 0.000000 },
    { -302.633860, -67.117545, 0.340291, 0.585744, 0.193752 },
    { 46.379854, 383.321679, 0.514253, 1.000000, 0.000000 },
    { 0.885830, -137.234687, 0.514253, 0.799704, 0.195867 },
    { 265.678093, -89.049599, 1.000000, 0.492724, 0.145950 },
    { 9.805580, -15.331385, 1.000000, 0.446081, 0.143565 },
    { 279.122956, 101.763258, 1.000000, 0.352445, 0.000000 },
    { -69.638459, 194.630568, 1.000000, 0.352445, 0.000000 },
    { 217.303109, 325.272048, 1.000000, 0.352445, 0.000000 },
    { -331.550894, -5.731542, 0.179396, 0.352445, 0.016546 },
    { 171.209385, 85.935722, 0.714911, 0.583974, 0.000000 },
    { 326.960252, 134.900923, 1.000000, 0.693666, 0.000000 },
    { -25.845867, 9.156733, 0.948602, 0.720100, 0.000000 },
    { 191.098776, 99.643676, 1.000000, 0.743885, 0.000000 },
  };

  JacobianControl jc;

  f64 initQ[N_TURN_ACT] = { 1,1,1 };
  jc.SetQs(&initQ[0]);

  const f64 *qs;

  J[0] = Vec2f64(400, 0); J[1] = Vec2f64(-200.0000, 346.4102); J[2] = Vec2f64(-200.0000, -346.4102);
  for (s32 i = 0; i < sizeof(testData) / sizeof(testData[0]); i++) {
    Vec2f64 dx(testData[i].q_res[0], testData[i].q_res[1]);

    qs = jc.Update(dx, J);

    f64 maxError = -1;
    for (s32 j = 0; j < N_TURN_ACT; j++)
      maxError = MAX(maxError, ABS(qs[j] - testData[i].q_res[2 + j]));

    if (maxError > 1e-4)
      s32 y = 0;

#ifdef __AVR_ATmega2560__
    Serial.println("Error " + String(maxError) + " qs " + String(qs[0]) + " " + String(qs[1]) + " " + String(qs[2]));
#endif

    jc.SetQs(&testData[i].q_res[2]);

  }
}
#endif

#ifdef RUN_CVX_TEST

extern "C"
{
#include "cvxgen/solver.h"
  Vars vars;
  Params params;
  Workspace work;
  Settings settings;
}

void runTest()
{
#if 0
  DeltaTestData testData[] = { 
    { -356.352529, -24.280793, 0.018780, 0.874615, 0.944707, 0.00000059 },
    { 39.941583, -30.465344, 0.034911, 0.746919, 0.904958, 0.00000060 },
    { 5.464396, 19.848427, 0.042387, 0.769383, 0.870124, 0.00000069 },
    { -11.133521, 4.342671, 0.033833, 0.794930, 0.883135, 0.00000061 },
    { -250.165437, 69.565317, 0.000000, 1.000000, 1.000000, 176.60780253 },
    { -48.159266, 266.180382, 0.000000, 1.000000, 0.483904, 174.79734228 },
    { -8.071445, -5.183887, 0.000000, 1.000000, 0.505218, 4.39812936 },
    { -96.691088, -37.479680, 0.000000, 1.000000, 0.707229, 64.99709876 },
    { -97.653469, 57.668323, 0.000000, 1.000000, 0.704440, 113.40454652 },
    { -61.614649, -165.056207, 0.000000, 0.867438, 1.000000, 33.50296444 },
    { 120.332318, 181.612064, 0.082466, 0.911208, 0.519501, 0.00000102 },
    { 23.200744, -120.329147, 0.137323, 0.734382, 0.690036, 0.00000113 },
    { 27.201998, 152.785872, 0.145835, 0.895417, 0.410015, 0.00000093 },
    { 359.624095, -151.925116, 0.755530, 0.386767, 0.339936, 0.00000068 },
    { -169.218421, -319.033908, 0.472408, 0.066205, 0.940345, 0.00000125 },
    { 85.574700, -124.650271, 0.683071, 0.000000, 1.000000, 81.05116577 },
    { 218.705058, 143.106348, 1.000000, 0.000000, 0.575249, 8.06338678 },
    { -135.179675, -51.411166, 0.798467, 0.062210, 0.785871, 0.00000084 },
    { 25.382487, 160.614695, 0.790100, 0.222215, 0.482221, 0.00000054 },
    { -105.649956, 20.883827, 0.616848, 0.343230, 0.542950, 0.00000101 },
    { -47.523285, 176.798845, 0.537787, 0.638165, 0.327510, 0.00000078 },
    { 150.081967, -180.183789, 0.782922, 0.248023, 0.457513, 0.00000114 },
    { -23.223499, 108.738715, 0.743779, 0.423889, 0.319478, 0.00000069 },
    { -78.847048, 23.110356, 0.617251, 0.527836, 0.356711, 0.00000091 },
    { 61.841870, 196.093626, 0.765294, 0.804310, 0.067112, 0.00000087 },
    { 165.101401, 100.788502, 1.000000, 0.899944, 0.000000, 88.82329821 },
    { -183.403986, 215.625218, 0.591518, 1.000000, 0.000000, 180.96483257 },
    { -5.651111, -276.379401, 0.552236, 0.575927, 0.373765, 0.00000926 },
    { -55.727336, -138.660710, 0.458204, 0.421074, 0.619191, 0.00000857 },
    { -66.880874, -118.349005, 0.332565, 0.291815, 0.831576, 0.00000112 },
    { -116.927462, -57.550130, 0.091111, 0.259613, 0.965508, 0.00000059 },
    { -23.164143, 8.315765, 0.054603, 0.293018, 0.974907, 0.00000045 },
    { 17.879601, 388.229545, 0.134300, 0.888377, 0.449544, 0.00000094 },
    { 33.658547, 274.535400, 0.049485, 1.000000, 0.000000, 80.14146566 },
    { -169.505615, -234.780551, 0.000000, 1.000000, 0.695454, 12.26373857 },
    { -235.747892, 37.204263, 0.000000, 1.000000, 0.909584, 222.76579471 },
    { 26.493019, 11.855891, 0.015848, 0.966728, 0.842087, 0.00000048 },
    { 19.142351, 57.649392, 0.005994, 0.992228, 0.701167, 0.00000081 },
    { 41.820435, 30.426235, 0.031840, 0.957439, 0.578545, 0.00000045 },
    { -70.955780, -24.681625, 0.000000, 1.000000, 0.726038, 23.33550392 },
    { 260.390234, -80.821191, 0.359486, 0.591855, 0.551204, 0.00000795 },
    { -273.528967, -72.101378, 0.009917, 0.822039, 0.989526, 0.00000295 },
    { -32.302640, 369.280135, 0.000000, 1.000000, 0.314407, 147.53215734 },
    { 154.426868, -246.086864, 0.321162, 0.579899, 0.604697, 0.00000832 },
    { -334.248451, 41.713511, 0.000000, 1.000000, 0.981666, 53.54337568 },
    { -8.707361, -263.986799, 0.000000, 0.448503, 1.000000, 133.18306036 },
    { 217.333779, -130.426823, 0.330006, 0.046919, 0.974926, 0.00000043 },
    { -147.218828, 165.010776, 0.123688, 0.446821, 0.898483, 0.00000091 },
    { 25.396850, 72.509880, 0.181715, 0.546015, 0.788359, 0.00000111 },
    { -47.811286, -310.313038, 0.000000, 0.000000, 1.000000, 63.67056218 },
    { 335.171199, -59.368711, 0.837928, 0.000000, 1.000000, 59.36871127 },
    { -34.577396, -9.715333, 0.751485, 0.000000, 1.000000, 9.71533326 },
    { -370.267830, 25.928223, 0.000000, 0.143228, 1.000000, 47.37517264 },
    { 45.437311, -188.642721, 0.041977, 0.000000, 1.000000, 139.02722858 },
    { -83.774713, 24.179426, 0.000000, 0.136080, 1.000000, 45.92016844 },
    { 13.003580, 26.423059, 0.052358, 0.194067, 0.981710, 0.00000044 },
    { 199.737823, -160.240376, 0.463815, 0.000000, 1.000000, 86.67797492 },
    { 102.894435, 129.818766, 0.667633, 0.133960, 0.759205, 0.00000111 },
    { 79.794003, 25.433620, 0.804895, 0.108446, 0.660271, 0.00000102 },
    { -31.492937, -258.538068, 0.841804, 0.000000, 1.000000, 103.28568031 },
    { -108.954832, 14.475386, 0.567141, 0.018617, 0.976831, 0.00000033 },
    { -220.529589, -312.624386, 0.018044, 0.000000, 1.000000, 298.14901034 },
    { -25.782075, 11.056923, 0.000000, 0.047145, 1.000000, 10.54891878 },
    { 30.991405, 11.762217, 0.074489, 0.061132, 0.980033, 0.00000063 },
    { 209.409414, -54.178063, 0.577430, 0.000000, 1.000000, 26.08450838 },
    { 35.523224, -57.999358, 0.666241, 0.000000, 1.000000, 57.99935827 },
    { -17.978752, 276.206489, 0.581777, 0.359153, 0.561813, 0.00000839 },
    { 107.977300, -83.137751, 0.772962, 0.160395, 0.603054, 0.00000867 },
    { 317.501132, 136.621667, 1.000000, 0.000000, 0.000000, 75.86147414 },
    { -75.292681, 286.711551, 1.000000, 0.714866, 0.000000, 78.15040082 },
    { 151.840402, 232.852659, 1.000000, 0.999999, 0.000000, 248.19912033 },
    { 158.035323, -244.182023, 1.000000, 0.273785, 0.000000, 14.77154794 },
    { -184.024957, 225.005099, 0.883740, 0.942354, 0.019035, 0.00000060 },
    { 80.337720, 96.452271, 1.000000, 1.000000, 0.000000, 81.31038177 },
    { -307.038493, 169.845569, 0.232411, 1.000000, 0.000000, 169.84556627 },
    { 200.179969, 289.598211, 0.732915, 1.000000, 0.000000, 289.59832476 },
    { 117.691535, -370.401548, 0.836396, 0.274623, 0.343880, 0.00000112 },
    { -55.248096, 60.561517, 0.754356, 0.418117, 0.312548, 0.00000070 },
    { 19.608350, 330.564069, 0.938044, 1.000000, 0.000000, 20.72392453 },
    { 272.879285, -60.585161, 1.000000, 0.558708, 0.000000, 184.56576888 },
    { -114.126269, 12.601805, 0.821622, 0.683835, 0.088749, 0.00000095 },
    { 175.108530, -301.742502, 1.000000, 0.000000, 0.270426, 3.84041919 },
    { 72.306447, 47.257228, 1.000000, 0.000000, 0.077728, 38.99060546 },
    { 166.749585, -295.522751, 1.000000, 0.000000, 0.509112, 292.17079339 },
    { -44.144856, 102.626055, 0.900921, 0.159412, 0.372268, 0.00000096 },
    { -195.710234, 90.873036, 0.596979, 0.475909, 0.426437, 0.00001191 },
    { 276.205620, 189.150638, 1.000000, 0.528467, 0.000000, 46.44372051 },
    { -302.633860, -67.117545, 0.485602, 0.673778, 0.339062, 0.00000105 },
  };
#else

  DeltaTestData testData[] = {
    { -307.038493, 169.845569, 0.232411, 1.000000, 0.000000, 169.84556627 }
  };
#endif

  set_defaults();
  setup_indexing();

  settings.verbose = 0;
  settings.verbose_refinement = 0;
  settings.max_iters = 8;
  settings.better_start = 0;
  settings.debug = 0;
  settings.refine_steps = 0;

  J[0] = Vecf64<2>(400, 0); J[1] = Vecf64<2>(-200.0000, 346.4102); J[2] = Vecf64<2>(-200.0000, -346.4102);

  f64 qs[N_TURN_ACT]; 
  qs[0] = qs[1] = qs[2] = 1;

#ifdef __AVR_ATmega2560__
  u32 beginTime = millis();
#endif
  s32 nRepeat = 100;
  Vecf64<2> dx(testData[0].q_res[0], testData[0].q_res[1]);
  params.q[0] = qs[0];
  params.q[1] = qs[1];
  params.q[2] = qs[2];

  for (s32 j = 0; j < N_TURN_ACT; j++) {
    params.J[j * 2 + 0] = J[j].x;
    params.J[j * 2 + 1] = J[j].y;
  }

  params.dx[0] = dx.x;
  params.dx[1] = dx.y;
  for (s32 i = 0; i < nRepeat*sizeof(testData) / sizeof(testData[0]); i++) {
    //Vec2f64 dx(testData[i].q_res[0], testData[i].q_res[1]);

    solve();

#if 0
    Vec2f64 delta_x_actual = J[0] * vars.dq[0] + J[1] * vars.dq[1] + J[2] * vars.dq[2];
    f64 error = (delta_x_actual - dx).magnitude();
    f64 matlabError = testData[i].q_res[5];
    if (error > 1e-5 && ABS(error-matlabError)/matlabError > 1e-4)
      s32 y = 0;

#ifdef __AVR_ATmega2560__
    Serial.println("Error " + String(error) + " matlab error " + String(matlabError) + " difference " + String(ABS(error-matlabError)) + " dq 0 1 2 " + String(vars.dq[0]) + " " + String(vars.dq[1]) + " " + String(vars.dq[2]));
#endif

    qs[0] = testData[i].q_res[2];
    qs[1] = testData[i].q_res[3];
    qs[2] = testData[i].q_res[4];
#endif
  }


#ifdef __AVR_ATmega2560__
  u32 endTime = millis();
  f64 nTrials = (f64)(nRepeat*sizeof(testData) / sizeof(testData[0]));
  Serial.println("Average time " + String(((f64)endTime - beginTime) / nTrials));
#endif
}
#endif

#ifndef __AVR_ATmega2560__
int main(int argc, char **argv)
{
  runTest();
}
#endif